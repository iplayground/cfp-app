.row
  %fieldset.col-md-6
    %p
      = markdown(t('.readme', link: event_path(event.slug)))
    = proposal.title_input(f)
    = proposal.abstract_input(f)

    = f.input :talk_language, as: :radio_buttons, collection: [['Chinese 中文', 'Chinese 中文'], ['台語 Tâi-gí', '台語 Tâi-gí'], ['English', 'English']], input_html: { class: 'watched'}

    = f.input :length, as: :radio_buttons, collection: [['Talk 40 minutes', 'talk']]

    %h3
      = t('.for_review_committee')
    %p.help-block
      = t('.this_content_will')
      %strong= t('.only')
      = t('.be_visible_to_the_review_commi')


    = f.input :details, input_html: { class: 'watched', rows: 10 }
    = f.input :pitch, input_html: { class: 'watched', rows: 5 }


  %fieldset.col-md-6
    - if event.proposal_tags.any?
      %h3= t('.tags')
      = f.select :tags,
        options_for_select(event.proposal_tags, proposal.object.tags),
        {}, {class: 'multiselect proposal-tags', multiple: true }

    - if event.custom_fields.any?
      %h3= t('.custom_fields')
    - event.custom_fields.each do |custom_field|
      .form-group
      = f.label custom_field
      = text_field_tag "proposal[custom_fields][#{custom_field}]", proposal.custom_fields[custom_field], class: "form-control"


    = render partial: 'speakers/fields', locals: { f: f }

    = render partial: 'preview', locals: { proposal: proposal }

    .form-submit.clearfix
      %button.pull-left.btn.btn-primary.btn-lg{:type => "submit"}= t('.submit_proposal')
